# Generated by Django 3.0.3 on 2020-04-05 20:01

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('username', models.CharField(max_length=120, verbose_name='username')),
                ('password', models.CharField(max_length=120)),
                ('first_name', models.CharField(blank=True, max_length=120, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=120, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, primary_key=True, serialize=False, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=9)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('class_term', models.CharField(default='', max_length=200)),
                ('department', models.CharField(max_length=200)),
                ('course_code', models.CharField(default=0, max_length=50)),
                ('section_number', models.CharField(max_length=10)),
                ('professor', models.CharField(max_length=200)),
                ('class_info', models.TextField(max_length=200, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Textbook',
            fields=[
                ('bookstore_isbn', models.CharField(default='', max_length=200, primary_key=True, serialize=False)),
                ('isbn13', models.CharField(default='', max_length=200)),
                ('isbn10', models.CharField(default='', max_length=200)),
                ('title', models.CharField(default='', max_length=350)),
                ('author', models.CharField(default='', max_length=200)),
                ('req_type', models.CharField(default='', max_length=200)),
                ('cover_photo_url', models.CharField(default='', max_length=400)),
                ('cover_photo', models.ImageField(upload_to='textbook_images')),
                ('bookstore_new_price', models.FloatField(blank=True, default=0)),
                ('bookstore_used_price', models.FloatField(blank=True, default=0)),
                ('publisher', models.CharField(default='', max_length=200)),
                ('date', models.CharField(default='', max_length=200)),
                ('description', models.CharField(default='', max_length=100000)),
                ('page_count', models.IntegerField(blank=True, default=0)),
                ('google_rating', models.FloatField(blank=True, default=0)),
                ('num_reviews', models.IntegerField(blank=True, default=0)),
                ('class_objects', models.ManyToManyField(to='textbook_exchange.Class')),
            ],
        ),
        migrations.CreateModel(
            name='ProductListing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('condition', models.CharField(max_length=10)),
                ('picture', models.ImageField(upload_to='listing_images')),
                ('comments', models.CharField(blank=True, max_length=500)),
                ('hasBeenSoldFlag', models.BooleanField(default=False)),
                ('published_date', models.DateTimeField(auto_now=True, verbose_name='date published')),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='textbook_exchange.Cart')),
                ('class_object', models.ManyToManyField(to='textbook_exchange.Class')),
                ('textbook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='textbook_exchange.Textbook')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PendingTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=9)),
                ('date_transacted', models.DateTimeField(auto_now=True)),
                ('date_settled', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
