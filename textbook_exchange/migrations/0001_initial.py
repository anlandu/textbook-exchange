# Generated by Django 3.0.3 on 2020-02-26 07:44

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('department', models.CharField(max_length=200)),
                ('subject', models.CharField(max_length=200)),
                ('class_name', models.CharField(max_length=200)),
                ('class_acronym', models.CharField(max_length=200)),
                ('class_code', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('section_number', models.CharField(max_length=10)),
                ('professor', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Textbook',
            fields=[
                ('isbn', models.IntegerField(max_length=13, primary_key=True, serialize=False)),
                ('class_key', models.CharField(max_length=200)),
                ('title', models.CharField(max_length=350)),
                ('author', models.CharField(max_length=200)),
                ('edition', models.CharField(max_length=200)),
                ('cover_photo', models.ImageField(upload_to='textbook_images')),
                ('class_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('condition_choices', models.CharField(default='likenew', max_length=10, verbose_name=[('likenew', 'Like new'), ('verygood', 'Very good'), ('good', 'Good'), ('acceptable', 'Acceptable')])),
                ('picture', models.ImageField(upload_to='listing_images')),
                ('comments', models.CharField(blank=True, max_length=500)),
                ('hasBeenSoldFlag', models.BooleanField()),
                ('class_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='textbook_exchange.Class')),
                ('textbook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='textbook_exchange.Textbook')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
